0.032 - 4.717

0304 - read for sound (probably current)

1c01 - get frequency
1c05 - get frequency
2200 - reset f
2201 - reset f


"""

"""
deselect photogate1 (also reset all)
0a
2a

deselect photogate2(1on)
0a80
2a01

select photogate1
0a02000888
2a

select photogate2(1on)
0a85000888
2a01

select photogate2(1off)
0a05000888
2a

select photogate1(2on)
0a82000888
2a01


reset photogate1
07
reset photogate2
1f



setup frequency on 2 0 1000 4v
0a051808080000000000000000000000
2a000100000000000000000000000000
22000000000000000000000000000000

0a829909080000000000000000000000
1c010000000000000000000000000000
2a010100000000000000000000000000
22010000000000000000000000000000


1   0333
 .1 0385
 .2 03d7
 .3 0429
 .4 047b
 .5 04cd
 .6 051e
 .7 0570
 .8 05c2
 .9 0614
1.5 04cd
2   0666
2.5 0800
3   0999
3.5 0b33
4   0ccc
4.5 0e66
5   0fff


freq for 2 (single)
1v
0a 05 3303 080000000000000000000000
2v
0a 05 6606 080000000000000000000000
3v
0a 05 9909 080000000000000000000000
4v
0a 05 cc0c 080000000000000000000000
5v
0a 05 ff0f 080000000000000000000000 (up front)
0a 05 ff0f 880000000000000000000000 (down front)
voltage coded as int.from_bytes() / 65536 * 5


frequency meter setup
0A (sensor_id)/1b (threshold)/2b (down=>0b1000 | up=>0b0000) 0b1000

for 1
2a000100000000000000000000000000
for 2
2a000100000000000000000000000000

0a 0x80+0x02 6606 08
2a 01 01
22 01


sensor_id:
voltage 1: 0x02
voltage 2: 0x05



setting up counter

0A (sensor_id)/1b (threshold)/2b (down=>0b1000 | up=>0b0000) 0b1000

0a 02 cc0c 080000000000000000000000



time interval
0a 02 9909 08 0000000000000000000000 -> read 01
0a 85 0008 88 0000000000000000000000 -> 06
08 up-up
48 up-down/down-up
88 down-down

0a029909080000000000000000000000
2a000100000000000000000000000000




if sensor is allocated first
    then sensor_id is just port number (see upper)
else
    0x80 is added to port to identify that
    this sensor was mapped secondly

0x2A command identifies 1b sensor mapped order (0 for 1st, 1 for 2nd)

RDCN is using MAPPING_ORGER, not SENSOR_ID
    0 -> 0x09 -> 0000|1001
    1 -> 0x1e -> 0001|1110

RDFQ also
    0 -> 0x01 -> 0001
    1 -> 0x05 -> 0101

TIME INTERVAL RDFQ params
(0/1)+1 - up-up (0) 00
(0/1)+2 - down-down (8) 10
(0/1)+3 - up-down (4) 01          + 0X1D (DIFF)
(0/1)+4 - down-up (0) 00          + 0X1D
3&4 - all (4)


FREQUENCY METER RDFQ params
(0/1)+1 - up (0)
(0/1)+2 - down (8)


u-d - time when light on
d-u -

WOW!! FREQ AND INTERVAL ARE SAME

DIGITAL SENSOR IS SHIT - ONLY VOLTAGE READINGS

VOLTAGE IS READ WITH port id